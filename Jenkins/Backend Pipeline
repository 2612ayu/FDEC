Launch ec2 instance with IAM role of administrator access.(take t3.medium).
Install Jenkins
{
sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
sudo yum upgrade
# Add required dependencies for the jenkins package
sudo yum install fontconfig
sudo yum install java-17* -y #check official website or check for java latest update
sudo yum install jenkins -y
sudo systemctl daemon-reload
sudo systemctl start jenkins
sudo systemctl enable jenkins
sudo systemctl status Jenkins
}
Take public ip of instance with port 8080 [public_ip:8080].
Give security group all traffic.
Change sudoers password for all ( sudo vim /etc/sudoers ).
In this below root  add this
[ jenkins ALL=(ALL) NOPASSWD:ALL ].
Save this file and login to Jenkins ( public_ip:8080 ).
Give administrative password which is available in Jenkins login page and this path is (sudo cat /var/lib/jenkins/secrets/initialAdminPassword ).
After that give username ,password, Full name and email id and save it.
It will launch Jenkins page.
Create new item.
Give new item name and select pipeline and click on ok.
In pipeline write script.
[
pipeline {
    agent any

    stages {
        stage('git checkout') {
            steps {
                sh ''' sudo yum install git -y
                rm -rf student-ui
                git clone https://github.com/2612ayu/student-ui.git '''
            }
        }
Click on apply and save it.
Build now it will build the steps.
This stage will download  git and do git clone in Jenkins.
Then next we have write docker file.
We do git clone of that.
stage('docker file') {
            steps {
                sh ''' 
                rm -rf FDEC-3-artifacts
                git clone https://github.com/2612ayu/FDEC-3-artifacts.git
                ls -al 
                '''
            }
        }
Then next we do docker build in this.
Install docker,start and enable it.
Build docker with name studentapp.
stage('docker build') {
            steps {
                sh ''' 
                sudo yum install docker -y 
                sudo systemctl start docker 
                sudo systemctl enable docker 
                cd FDEC-3-artifacts/backend/
                sudo cp -rf ../../student-ui .
                sudo docker build -t studetapp .
                ls -al
                '''
            }
        } 
After that push this docker image into amazon elastic contain registory.
Go to amazon service and search ECR(Elastic Contain Registory).
Create registory and give repository name and click on create registory.
Select registory which you created and click on view push command.
Retrive an authentication token and authenticate your docker client to your registry.Use the AWS CLI:
aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 001959128612.dkr.ecr.ap-south-1.amazonaws.com
After the build completes,tage your image so you can push the image to this repository:
docker tag studdent:latest 001959128612.dkr.ecr.ap-south-1.amazonaws.com/studdent:latest
Run the following command to push this image to your newly created AWS repository:
docker push 001959128612.dkr.ecr.ap-south-1.amazonaws.com/studdent:latest

stage('docker push') {
            steps {
                sh ''' 
                aws ecr get-login-password --region ap-south-1 | sudo docker login --username AWS --password-stdin 001959128612.dkr.ecr.ap-south-1.amazonaws.com
            sudo docker tag studentapp 001959128612.dkr.ecr.ap-south-1.amazonaws.com/studdent:latest
            sudo docker push 001959128612.dkr.ecr.ap-south-1.amazonaws.com/studdent:latest
            '''
            }
        }
    }
}
Click on build apply and save.
Now build it.
Check image in ECR.
